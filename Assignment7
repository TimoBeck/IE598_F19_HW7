# Import packages
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
#from tabulate import tabulate
from sklearn.metrics import roc_auc_score
from sklearn.model_selection import cross_val_score

# Import dataset
df = pd.read_csv("ccdefault_2.csv")

# Set target variables and Attributes 
X = df.iloc[0:,:24]
y = df.iloc[0:,24]

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)

# List to store the scores of the random forest
scores = []

# Run the reandom
n_est = [1,10,20,50,80,100,500]
for i in n_est:
    forest = RandomForestClassifier(criterion='entropy',n_estimators=i,random_state=1,n_jobs=2)
    forest.fit(X_train, y_train)
    scores.append(np.mean(cross_val_score(estimator=forest,X=X_train,y=y_train,cv=10,n_jobs=1)))

k = 0
for j in n_est:
    print("n_estimators = " + str(n_est[k]))
    print("CV accuracy score = " + str(scores[k]))
    k = k+1

print("\nforest is most accurate when n_estimators = " + str(n_est[scores.index(max(scores))]))

forest = RandomForestClassifier(criterion='entropy',n_estimators=scores.index(max(scores))+1,random_state=1,n_jobs=2)
forest.fit(X_train, y_train)
importances=forest.feature_importances_ 
print(importances)
print("\nIndex of most important feature: " + str(list(importances).index(max(importances))))
print("Name of most important feature: " + df.columns.values[list(importances).index(max(importances))])

print("My name is Timothee Becker")
print("My NetID is: tbecker5")
print("I hereby certify that I have read the University policy on Academic‚ê£,Integrity and that I am not in violation.")
